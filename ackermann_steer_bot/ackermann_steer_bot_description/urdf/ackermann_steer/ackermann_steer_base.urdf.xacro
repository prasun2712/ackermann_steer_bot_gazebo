<?xml version="1.0"?>

<robot name="base"
    xmlns:xacro="http://ros.org/wiki/xacro">

    <xacro:include filename="$(find ackermann_steer_bot_description)/urdf/common_properties/common_properties.urdf.xacro" />

    <!-- Define a number of dimensions using properties -->
    <xacro:property name="base_size_x" value="1.20" />
    <xacro:property name="base_size_y" value="0.8" />
    <xacro:property name="base_size_z" value="0.12" />
    <xacro:property name="wheel_length" value="0.07032" /> <!-- 0.06032 value for perfect fit.-->
    <xacro:property name="wheel_radius" value="0.09191" />
    <xacro:property name="wheel_offset_x" value="0.00" />
    <xacro:property name="wheel_offset_y" value="0.1" />
    <xacro:property name="PI" value="3.1415" />
    <!-- differential_drive_controller update rate -->
    <xacro:property name="update_rate" value="30" />
    <!-- 
        For more colors check the link below
        http://wiki.ros.org/simulator_gazebo/Tutorials/ListOfMaterials 
    -->
    <xacro:property name="wheel_color" value="WoodPallet" />
    <xacro:property name="castor_wheel_color" value="Grass" />
    <xacro:property name="body_color" value="WoodFloor" />

    <!-- 
        Define a wheel 
        It gets 4 params :
        suffix - identifier of the wheel.
        parent - it is the parent to which the joint for link is connected.
        reflect - for symmetrically placing the wheel. +1 represents +ve y and -1 represents -ve y,
                  also it is used to rotate around x axis such that z axis face each other.
        color - visual color
        Note : As per convention left(l) - +ve y and right(r) - -ve y
    -->
    <xacro:macro name="wheel" params="suffix parent reflect color_rviz color_gazebo">
        <joint name="${parent}_${suffix}_wheel_joint" type="continuous">
            <axis xyz="0 0 ${-reflect}" />
            <limit effort="100" velocity="100"/>
            <safety_controller k_velocity="10" />
            <origin xyz="-${base_size_x/2 - wheel_radius - wheel_offset_x } ${reflect * (base_size_y/2 - wheel_offset_y)} -${base_size_z/2}" rpy="${reflect*PI/2} 0 0" />
            <parent link="${parent}_link"/>
            <child link="${parent}_${suffix}_wheel_link"/>
        </joint>
        <gazebo reference="${parent}_${suffix}_wheel_link">
            <material>Gazebo/${color_gazebo}</material>
        </gazebo>
        <link name="${parent}_${suffix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <material name="${color_rviz}" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length="${wheel_length}"/>
                </geometry>
                <surface>
                    <friction>
                    <ode>
                        <mu>0.998000</mu>
                        <mu2>0.998000</mu2>
                        <fdir1>0.000000 0.000000 0.000000</fdir1>
                        <slip1>0.000000</slip1>
                        <slip2>0.000000</slip2>
                    </ode>
                    </friction>
                </surface>
            </collision>
            <xacro:cylinder_inertial radius="${wheel_radius}" length="${wheel_length}" mass="5">
                <origin xyz="0 0 0" />
            </xacro:cylinder_inertial>
        </link>
    </xacro:macro>

    <!-- The base xacro macro -->
    <xacro:macro name="base" params="name color_rviz color_gazebo">
        <gazebo reference="${name}_link">
            <material>Gazebo/${color_gazebo}</material>
        </gazebo>
        <link name="${name}_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
                <material name="${color_rviz}" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="${base_size_x} ${base_size_y} ${base_size_z}" />
                </geometry>
            </collision>
            <xacro:box_inertial x="${base_size_x}" y="${base_size_y}" z="${base_size_z}" mass="15">
                <origin xyz="0 0 0" />
            </xacro:box_inertial>
        </link>
    </xacro:macro>

    <link name="base_footprint">
        <visual>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <box size="0.05 0.05 0.001" />
            </geometry>
            <material name="TransparentGreen" />
        </visual>
    </link>

    <joint name="base_joint" type="fixed">
        <origin xyz="0 0 ${base_size_z/2 + wheel_radius}" rpy="0 0 0" />
        <parent link="base_footprint"/>
        <child link="base_link" />
    </joint>

    <!-- Add base_link -->
    <xacro:base name="base" color_rviz="OffWhite" color_gazebo="${body_color}" />
    <!-- Add the drive wheels -->
    <xacro:wheel parent="base" suffix="l" reflect="1" color_rviz="Blue" color_gazebo="${wheel_color}" />
    <xacro:wheel parent="base" suffix="r" reflect="-1" color_rviz="Blue" color_gazebo="${wheel_color}" />

</robot>